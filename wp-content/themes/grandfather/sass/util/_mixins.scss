/* breakpoints */
 @mixin breakpoint($point) {
   @if $point == desktop {
     @media (min-width: 1200px) { @content ; }
  }
   @else if $point == laptop {
     @media (min-width: 1025px) { @content ; }
  }
    @else if $point == tablet {
     @media (min-width: 768px) { @content ; }
  }
   @else if $point == phablet {
     @media (min-width: 720px)  { @content ; }
  }
  @else if $point == xlgscreen {
     @media (min-width: 1280px)  { @content ; }
  }
}

/* retina */
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

/* animations */
@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }  
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }  
    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

/* opacity */
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

/* absolute positioning */
@mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
	top: $top;
	right: $right;
	bottom: $bottom;
	left: $left;
	position: absolute;
}

@mixin cover-background($img-uri, $background-top:"center", $background-left:"center", $background-attachment:"scroll") {
  background: url($img-uri) no-repeat unquote($background-top) unquote($background-left) unquote($background-attachment); 
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;  
}

@mixin button-hover($color) {
  -webkit-transition: background-color, all 0.3s ease-out;
  -moz-transition: background-color, all 0.3s ease-out;
  -o-transition: background-color, all 0.3s ease-out;
  transition: background-color, all 0.3s ease-out;  
  &:hover {
    background-color: lighten($color, 10%); 
  }
  &:active {
    background-color: darken($color, 10%);
  }
}

@mixin button-hover-solid($color) {
  -webkit-transition: background-color, all 0.3s ease-out;
  -moz-transition: background-color, all 0.3s ease-out;
  -o-transition: background-color, all 0.3s ease-out;
  transition: background-color, all 0.3s ease-out;
  &:hover {
    background-color: $color;
  }
  &:active {
    background-color: $color;
  }
}

$browser-context: 18;
@function em($pixels, $context: $browser-context) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }

  @if (unitless($context)) {
    $context: $context * 1px;
  }

  @return $pixels / $context * 1em;
}

@mixin optional-at-root($sel) {
  @at-root #{if(not &, $sel, selector-append(&, $sel))} {
    @content;
  }
}

@mixin placeholder {
  @include optional-at-root('::-webkit-input-placeholder') {
    @content;
  }

  @include optional-at-root(':-moz-placeholder') {
    @content;
  }

  @include optional-at-root('::-moz-placeholder') {
    @content;
  }

  @include optional-at-root(':-ms-input-placeholder') {
    @content;
  }
}
